{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "ArcComponents",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "requests-list-mixin.html",
        "start": {
          "line": 21,
          "column": 2
        },
        "end": {
          "line": 21,
          "column": 28
        }
      },
      "mixins": [
        {
          "description": "A mixin to be used with elements that consumes lists of requests.\nIt implements event listeners related to requests data change.",
          "summary": "",
          "path": "requests-list-mixin.html",
          "properties": [
            {
              "name": "requests",
              "type": "Array.<Object>",
              "description": "The list of request to render.\nIt can be eirther saved, history or project items.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 44,
                  "column": 8
                },
                "end": {
                  "line": 44,
                  "column": 23
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Array"
                }
              }
            },
            {
              "name": "hasRequests",
              "type": "boolean | null | undefined",
              "description": "Computed value, true when the project has requests.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 48,
                  "column": 8
                },
                "end": {
                  "line": 53,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "readOnly": true,
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "type",
              "type": "string | null | undefined",
              "description": "Requests list type. Can be one of:\n- saved\n- history\n- project\n\nDepending on the the type request change event is handled differently.\nFor saved and history requests corresponding type is processed.\nFor project requests list only request that has project id in the\nprojects list is processed.\n\nThis property must be set.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 67,
                  "column": 8
                },
                "end": {
                  "line": 67,
                  "column": 20
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              }
            },
            {
              "name": "projectId",
              "type": "string | null | undefined",
              "description": "Project datastore ID to display.\nThis should be set only when type is `project`",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 72,
                  "column": 8
                },
                "end": {
                  "line": 72,
                  "column": 25
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              }
            },
            {
              "name": "listType",
              "type": "string | null | undefined",
              "description": "Changes information density of list items.\nBy default it uses material's peper item with two lines (72px heigth)\nPossible values are:\n\n- `default` or empty - regular list view\n- `comfortable` - enables MD single line list item vie (52px heigth)\n- `compact` - enables list that has 40px heigth (touch recommended)",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 82,
                  "column": 8
                },
                "end": {
                  "line": 86,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_updateListStyles\"",
                  "attributeType": "String"
                }
              }
            },
            {
              "name": "_hasTwoLines",
              "type": "boolean | null | undefined",
              "description": "Computed value if the list item should be consisted of two lines of\ndescription.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 91,
                  "column": 8
                },
                "end": {
                  "line": 91,
                  "column": 93
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true,
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "true"
            },
            {
              "name": "project",
              "type": "Object | null | undefined",
              "description": "A project object associated with requests.\nThis is only valid when `type` is set to `project`. It is set automatically\nwhen `readProjectRequests()` is called.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 97,
                  "column": 8
                },
                "end": {
                  "line": 97,
                  "column": 23
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              }
            }
          ],
          "methods": [
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 108,
                  "column": 4
                },
                "end": {
                  "line": 113,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "disconnectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 115,
                  "column": 4
                },
                "end": {
                  "line": 120,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_dispatch",
              "description": "Dispatches bubbling and composed custom event.\nBy default the event is cancelable until `cancelable` property is set to false.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 129,
                  "column": 4
                },
                "end": {
                  "line": 141,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "type",
                  "type": "String",
                  "description": "Event type"
                },
                {
                  "name": "detail",
                  "type": "?any",
                  "description": "A detail to set"
                },
                {
                  "name": "cancelable",
                  "type": "?Boolean",
                  "description": "True if the event is cancelable (default value)."
                }
              ],
              "return": {
                "type": "CustomEvent"
              }
            },
            {
              "name": "_requestDeletedHandler",
              "description": "Handler for `request-object-deleted` event. Removes request from the list\nif it existed.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 147,
                  "column": 4
                },
                "end": {
                  "line": 161,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e",
                  "type": "CustomEvent"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_itemDeleted",
              "description": "Removes an item from the list by given id.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 166,
                  "column": 4
                },
                "end": {
                  "line": 174,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "id",
                  "type": "String",
                  "description": "Request ID to remove"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_historyItemDeleted",
              "description": "Removes a history item from the list by given id.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 179,
                  "column": 4
                },
                "end": {
                  "line": 194,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "id",
                  "type": "String",
                  "description": "Request ID to remove"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_requestChangedHandler",
              "description": "Handler for `request-object-changed` custom event.\nDepending on the `type` property it updates / adds / removes item from\nthe requests list.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 201,
                  "column": 4
                },
                "end": {
                  "line": 219,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e",
                  "type": "CustomEvent"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_projectTypeChanged",
              "description": "Handles request change when type is project.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 224,
                  "column": 4
                },
                "end": {
                  "line": 254,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "request",
                  "type": "Object",
                  "description": "Changed request object."
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_isProjectRequest",
              "description": "Checks if requests is related to current project.\n`projectId` has to be set on the element.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 261,
                  "column": 4
                },
                "end": {
                  "line": 272,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "request",
                  "type": "Object"
                }
              ],
              "return": {
                "type": "Boolean"
              }
            },
            {
              "name": "_savedTypeChanged",
              "description": "Handles request change when type is saved or history.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 277,
                  "column": 4
                },
                "end": {
                  "line": 297,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "request",
                  "type": "Object",
                  "description": "Changed request object."
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_dispatchProjectRead",
              "description": "Dispatches `project-read` custom event and returns it.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 303,
                  "column": 4
                },
                "end": {
                  "line": 307,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "id",
                  "type": "String",
                  "description": "Project ID to read"
                }
              ],
              "return": {
                "type": "CustomEvent",
                "desc": "Disaptched custom event"
              }
            },
            {
              "name": "_dispatchProjectList",
              "description": "Dispatches `request-project-list` custom event and returns it.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 313,
                  "column": 4
                },
                "end": {
                  "line": 317,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "id",
                  "type": "String",
                  "description": "Project ID"
                }
              ],
              "return": {
                "type": "CustomEvent",
                "desc": "Disaptched custom event"
              }
            },
            {
              "name": "_dispatchRequestChanged",
              "description": "Dispatches `request-object-changed` custom event and returns it.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 325,
                  "column": 4
                },
                "end": {
                  "line": 330,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "type",
                  "type": "String",
                  "description": "Request type, `saved` or `history`."
                },
                {
                  "name": "request",
                  "type": "Object",
                  "description": "Updated request to store."
                }
              ],
              "return": {
                "type": "CustomEvent",
                "desc": "Disaptched custom event"
              }
            },
            {
              "name": "readProjectRequests",
              "description": "A function to read request data for a project.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 336,
                  "column": 4
                },
                "end": {
                  "line": 369,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "projectId",
                  "type": "String",
                  "description": "Project ID"
                }
              ],
              "return": {
                "type": "Promise",
                "desc": "Promise.resolved to requests list."
              }
            },
            {
              "name": "_legacySort",
              "description": "Sorts requests list by `projectOrder` property",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 378,
                  "column": 4
                },
                "end": {
                  "line": 392,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "a",
                  "type": "Object"
                },
                {
                  "name": "b",
                  "type": "Object"
                }
              ],
              "return": {
                "type": "Number"
              }
            },
            {
              "name": "_updateBulk",
              "description": "Updates requests in bulk opeartion.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 399,
                  "column": 4
                },
                "end": {
                  "line": 402,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "items",
                  "type": "[type]",
                  "description": "[description]"
                }
              ],
              "return": {
                "type": "[type]",
                "desc": "[description]"
              }
            },
            {
              "name": "_updateRequest",
              "description": "Sends the `request-object-changed` custom event for each request on the list.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 408,
                  "column": 4
                },
                "end": {
                  "line": 425,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "request",
                  "type": "Object",
                  "description": "Request object."
                }
              ],
              "return": {
                "type": "Promise",
                "desc": "Promise resolved when the request object is updated."
              }
            },
            {
              "name": "_computeHasRequests",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 427,
                  "column": 4
                },
                "end": {
                  "line": 429,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "length"
                }
              ]
            },
            {
              "name": "_computeHasTwoLines",
              "description": "Computes value for `_hasTwoLines` property.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 435,
                  "column": 4
                },
                "end": {
                  "line": 440,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "listType",
                  "type": "?String",
                  "description": "Selected list type."
                }
              ],
              "return": {
                "type": "Boolean"
              }
            },
            {
              "name": "_updateListStyles",
              "description": "Updates icon size CSS variable and notifies resize on the list when\nlist type changes.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 446,
                  "column": 4
                },
                "end": {
                  "line": 454,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "type",
                  "type": "?String"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_applyListStyles",
              "description": "Applies `--paper-item-icon-width` variable.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 460,
                  "column": 4
                },
                "end": {
                  "line": 473,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "size",
                  "type": "Number",
                  "description": "Icon width in pixels."
                },
                {
                  "name": "target",
                  "type": "?Element",
                  "description": "The target to apply styling. Default to this."
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_persistRequestsOrder",
              "description": "Stores current order of requests in the project.\nThis shouls be only called wshen `project` property is set.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 479,
                  "column": 4
                },
                "end": {
                  "line": 492,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "Promise"
              }
            },
            {
              "name": "_idsArrayEqual",
              "description": "Tests if two arrays has the same order of ids (strings).",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 499,
                  "column": 4
                },
                "end": {
                  "line": 515,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "a1",
                  "type": "Array.<String>",
                  "description": "Array a"
                },
                {
                  "name": "a2",
                  "type": "Array.<String>",
                  "description": "Array b"
                }
              ],
              "return": {
                "type": "Boolean",
                "desc": "True when elements are ordered the same way."
              }
            },
            {
              "name": "_dispatchProjectUpdate",
              "description": "Dispatches `project-object-changed` event to inform model to update\nthe data.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 523,
                  "column": 4
                },
                "end": {
                  "line": 531,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "project",
                  "type": "Object",
                  "description": "Data to store."
                }
              ],
              "return": {
                "type": "Promise"
              }
            },
            {
              "name": "_projectChanged",
              "description": "Handler for the `project-object-changed` event.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 538,
                  "column": 4
                },
                "end": {
                  "line": 550,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e",
                  "type": "CustomEvent"
                }
              ],
              "return": {
                "type": "Boolean",
                "desc": "False if the event was not handled."
              }
            },
            {
              "name": "_updateProjectOrder",
              "description": "Updates requests order when project changed.\nIt reorder requests array for changed project order. It won't change\nrequests array when order is the same. It also won't change order when\nrequest list is different that project's requests list.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 559,
                  "column": 4
                },
                "end": {
                  "line": 586,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "project",
                  "type": "Object",
                  "description": "Changed project"
                }
              ],
              "return": {
                "type": "Boolean",
                "desc": "True when order has changed"
              }
            },
            {
              "name": "_dispatchExportData",
              "description": "Dispatches `export-data` event and returns it.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 593,
                  "column": 4
                },
                "end": {
                  "line": 609,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "requests",
                  "type": "Array.<Object>",
                  "description": "List of request to export."
                },
                {
                  "name": "opts",
                  "type": "Object"
                }
              ],
              "return": {
                "type": "CustomEvent"
              }
            },
            {
              "name": "_openRequest",
              "description": "Dispatches navigate event to open a request",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 615,
                  "column": 4
                },
                "end": {
                  "line": 626,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "id",
                  "type": "[type]",
                  "description": "[description]"
                }
              ],
              "return": {
                "type": "[type]",
                "desc": "[description]"
              }
            },
            {
              "name": "_validateType",
              "description": "Throws an error when type is not set.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 631,
                  "column": 4
                },
                "end": {
                  "line": 635,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "type",
                  "type": "String",
                  "description": "Passed to the function type"
                }
              ],
              "return": {
                "type": "void"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 0
            },
            "end": {
              "line": 638,
              "column": 2
            }
          },
          "privacy": "public",
          "name": "ArcComponents.RequestsListMixin",
          "attributes": [
            {
              "name": "requests",
              "description": "The list of request to render.\nIt can be eirther saved, history or project items.",
              "sourceRange": {
                "start": {
                  "line": 44,
                  "column": 8
                },
                "end": {
                  "line": 44,
                  "column": 23
                }
              },
              "metadata": {},
              "type": "Array.<Object>"
            },
            {
              "name": "has-requests",
              "description": "Computed value, true when the project has requests.",
              "sourceRange": {
                "start": {
                  "line": 48,
                  "column": 8
                },
                "end": {
                  "line": 53,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "type",
              "description": "Requests list type. Can be one of:\n- saved\n- history\n- project\n\nDepending on the the type request change event is handled differently.\nFor saved and history requests corresponding type is processed.\nFor project requests list only request that has project id in the\nprojects list is processed.\n\nThis property must be set.",
              "sourceRange": {
                "start": {
                  "line": 67,
                  "column": 8
                },
                "end": {
                  "line": 67,
                  "column": 20
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "project-id",
              "description": "Project datastore ID to display.\nThis should be set only when type is `project`",
              "sourceRange": {
                "start": {
                  "line": 72,
                  "column": 8
                },
                "end": {
                  "line": 72,
                  "column": 25
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "list-type",
              "description": "Changes information density of list items.\nBy default it uses material's peper item with two lines (72px heigth)\nPossible values are:\n\n- `default` or empty - regular list view\n- `comfortable` - enables MD single line list item vie (52px heigth)\n- `compact` - enables list that has 40px heigth (touch recommended)",
              "sourceRange": {
                "start": {
                  "line": 82,
                  "column": 8
                },
                "end": {
                  "line": 86,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "project",
              "description": "A project object associated with requests.\nThis is only valid when `type` is set to `project`. It is set automatically\nwhen `readProjectRequests()` is called.",
              "sourceRange": {
                "start": {
                  "line": 97,
                  "column": 8
                },
                "end": {
                  "line": 97,
                  "column": 23
                }
              },
              "metadata": {},
              "type": "Object | null | undefined"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    }
  ]
}
